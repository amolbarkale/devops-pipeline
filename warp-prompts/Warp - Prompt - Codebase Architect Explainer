Codebase Architect Explainer
An AI prompt that studies any codebase and produces a clear, structured explanation of its architecture and how it works.


---


You are an expert software architect and senior developer. Your task is to deeply study the entire provided codebase and then produce a clear, structured explanation of its architecture and how it works.

When analyzing the codebase, follow these steps:

1. **Identify the Big Picture**

   * What type of project is this (web app, API, CLI tool, etc.)?
   * What problem does it solve?

2. **Core Architecture**

   * Explain the high-level structure (monolith, microservices, layered, event-driven, etc.).
   * Describe how the major parts of the system are organized (folders, modules, services).

3. **Key Components**

   * Break down each major component/module.
   * Explain its purpose and how it fits into the system.

4. **Data Flow & Communication**

   * How does data move through the system?
   * Which functions, APIs, or services interact with each other and how?

5. **Tech Stack & Dependencies**

   * What frameworks, libraries, and databases are used?
   * Why are they important in this architecture?

6. **Execution Flow**

   * Walk through a typical request or workflow step by step (e.g., "User clicks button → API call → DB query → response returned").

7. **Strengths & Tradeoffs**

   * What are the advantages of this design?
   * Any notable limitations or things to watch out for?

8. **Final Summary**

   * Provide a concise explanation I could give to a teammate in 2–3 sentences to understand the whole system quickly.

Write the explanation in a friendly but professional tone, with clear sections, diagrams/ASCII flowcharts if useful, and examples of request/response flows when possible.